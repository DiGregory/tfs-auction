// Code generated by protoc-gen-go. DO NOT EDIT.
// source: LotsService.proto

package lotpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SingleLotRequestId struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SingleLotRequestId) Reset()         { *m = SingleLotRequestId{} }
func (m *SingleLotRequestId) String() string { return proto.CompactTextString(m) }
func (*SingleLotRequestId) ProtoMessage()    {}
func (*SingleLotRequestId) Descriptor() ([]byte, []int) {
	return fileDescriptor_76b8786f6486cebb, []int{0}
}

func (m *SingleLotRequestId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SingleLotRequestId.Unmarshal(m, b)
}
func (m *SingleLotRequestId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SingleLotRequestId.Marshal(b, m, deterministic)
}
func (m *SingleLotRequestId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SingleLotRequestId.Merge(m, src)
}
func (m *SingleLotRequestId) XXX_Size() int {
	return xxx_messageInfo_SingleLotRequestId.Size(m)
}
func (m *SingleLotRequestId) XXX_DiscardUnknown() {
	xxx_messageInfo_SingleLotRequestId.DiscardUnknown(m)
}

var xxx_messageInfo_SingleLotRequestId proto.InternalMessageInfo

func (m *SingleLotRequestId) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Lot struct {
	// @inject_tag: json:"ip"
	ID int64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ip"`
	// @inject_tag: json:"title"
	Title string `protobuf:"bytes,2,opt,name=Title,proto3" json:"title"`
	// @inject_tag: json:"description"
	Description string `protobuf:"bytes,3,opt,name=Description,proto3" json:"description"`
	// @inject_tag: json:"buy_price"
	BuyPrice float64 `protobuf:"fixed64,4,opt,name=BuyPrice,proto3" json:"buy_price"`
	// @inject_tag: json:"min_price"
	MinPrice float64 `protobuf:"fixed64,5,opt,name=MinPrice,proto3" json:"min_price"`
	// @inject_tag: json:"price_step"
	PriceStep float64 `protobuf:"fixed64,6,opt,name=PriceStep,proto3" json:"price_step"`
	// @inject_tag: json:"status"
	Status string `protobuf:"bytes,7,opt,name=Status,proto3" json:"status"`
	// @inject_tag: json:"end_at"
	EndAt string `protobuf:"bytes,8,opt,name=EndAt,proto3" json:"end_at"`
	// @inject_tag: json:"created_at"
	CreatedAt string `protobuf:"bytes,9,opt,name=CreatedAt,proto3" json:"created_at"`
	// @inject_tag: json:"updated_at"
	UpdateAt string `protobuf:"bytes,10,opt,name=UpdateAt,proto3" json:"updated_at"`
	// @inject_tag: json:"creator"
	Creator *ShortUser `protobuf:"bytes,11,opt,name=Creator,proto3" json:"creator"`
	// @inject_tag: json:"buyer"
	Buyer                *ShortUser `protobuf:"bytes,12,opt,name=Buyer,proto3" json:"buyer"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Lot) Reset()         { *m = Lot{} }
func (m *Lot) String() string { return proto.CompactTextString(m) }
func (*Lot) ProtoMessage()    {}
func (*Lot) Descriptor() ([]byte, []int) {
	return fileDescriptor_76b8786f6486cebb, []int{1}
}

func (m *Lot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Lot.Unmarshal(m, b)
}
func (m *Lot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Lot.Marshal(b, m, deterministic)
}
func (m *Lot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Lot.Merge(m, src)
}
func (m *Lot) XXX_Size() int {
	return xxx_messageInfo_Lot.Size(m)
}
func (m *Lot) XXX_DiscardUnknown() {
	xxx_messageInfo_Lot.DiscardUnknown(m)
}

var xxx_messageInfo_Lot proto.InternalMessageInfo

func (m *Lot) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Lot) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Lot) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Lot) GetBuyPrice() float64 {
	if m != nil {
		return m.BuyPrice
	}
	return 0
}

func (m *Lot) GetMinPrice() float64 {
	if m != nil {
		return m.MinPrice
	}
	return 0
}

func (m *Lot) GetPriceStep() float64 {
	if m != nil {
		return m.PriceStep
	}
	return 0
}

func (m *Lot) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Lot) GetEndAt() string {
	if m != nil {
		return m.EndAt
	}
	return ""
}

func (m *Lot) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Lot) GetUpdateAt() string {
	if m != nil {
		return m.UpdateAt
	}
	return ""
}

func (m *Lot) GetCreator() *ShortUser {
	if m != nil {
		return m.Creator
	}
	return nil
}

func (m *Lot) GetBuyer() *ShortUser {
	if m != nil {
		return m.Buyer
	}
	return nil
}

type SingleLotResponse struct {
	Lot                  *Lot     `protobuf:"bytes,1,opt,name=lot,proto3" json:"lot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SingleLotResponse) Reset()         { *m = SingleLotResponse{} }
func (m *SingleLotResponse) String() string { return proto.CompactTextString(m) }
func (*SingleLotResponse) ProtoMessage()    {}
func (*SingleLotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_76b8786f6486cebb, []int{2}
}

func (m *SingleLotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SingleLotResponse.Unmarshal(m, b)
}
func (m *SingleLotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SingleLotResponse.Marshal(b, m, deterministic)
}
func (m *SingleLotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SingleLotResponse.Merge(m, src)
}
func (m *SingleLotResponse) XXX_Size() int {
	return xxx_messageInfo_SingleLotResponse.Size(m)
}
func (m *SingleLotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SingleLotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SingleLotResponse proto.InternalMessageInfo

func (m *SingleLotResponse) GetLot() *Lot {
	if m != nil {
		return m.Lot
	}
	return nil
}

type ShortUser struct {
	// @inject_tag: json:"id"
	ID int64 `protobuf:"varint,1,opt,name=ID,proto3" json:"id"`
	// @inject_tag: json:"first_name"
	FirstName string `protobuf:"bytes,2,opt,name=FirstName,proto3" json:"first_name"`
	// @inject_tag: json:"last_name"
	LastName             string   `protobuf:"bytes,3,opt,name=LastName,proto3" json:"last_name"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShortUser) Reset()         { *m = ShortUser{} }
func (m *ShortUser) String() string { return proto.CompactTextString(m) }
func (*ShortUser) ProtoMessage()    {}
func (*ShortUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_76b8786f6486cebb, []int{3}
}

func (m *ShortUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShortUser.Unmarshal(m, b)
}
func (m *ShortUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShortUser.Marshal(b, m, deterministic)
}
func (m *ShortUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShortUser.Merge(m, src)
}
func (m *ShortUser) XXX_Size() int {
	return xxx_messageInfo_ShortUser.Size(m)
}
func (m *ShortUser) XXX_DiscardUnknown() {
	xxx_messageInfo_ShortUser.DiscardUnknown(m)
}

var xxx_messageInfo_ShortUser proto.InternalMessageInfo

func (m *ShortUser) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *ShortUser) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *ShortUser) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

type AllLotsRequestStatus struct {
	Status               string   `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AllLotsRequestStatus) Reset()         { *m = AllLotsRequestStatus{} }
func (m *AllLotsRequestStatus) String() string { return proto.CompactTextString(m) }
func (*AllLotsRequestStatus) ProtoMessage()    {}
func (*AllLotsRequestStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_76b8786f6486cebb, []int{4}
}

func (m *AllLotsRequestStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllLotsRequestStatus.Unmarshal(m, b)
}
func (m *AllLotsRequestStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllLotsRequestStatus.Marshal(b, m, deterministic)
}
func (m *AllLotsRequestStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllLotsRequestStatus.Merge(m, src)
}
func (m *AllLotsRequestStatus) XXX_Size() int {
	return xxx_messageInfo_AllLotsRequestStatus.Size(m)
}
func (m *AllLotsRequestStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_AllLotsRequestStatus.DiscardUnknown(m)
}

var xxx_messageInfo_AllLotsRequestStatus proto.InternalMessageInfo

func (m *AllLotsRequestStatus) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type AllLotsResponse struct {
	Lots                 []*Lot   `protobuf:"bytes,1,rep,name=lots,proto3" json:"lots,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AllLotsResponse) Reset()         { *m = AllLotsResponse{} }
func (m *AllLotsResponse) String() string { return proto.CompactTextString(m) }
func (*AllLotsResponse) ProtoMessage()    {}
func (*AllLotsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_76b8786f6486cebb, []int{5}
}

func (m *AllLotsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllLotsResponse.Unmarshal(m, b)
}
func (m *AllLotsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllLotsResponse.Marshal(b, m, deterministic)
}
func (m *AllLotsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllLotsResponse.Merge(m, src)
}
func (m *AllLotsResponse) XXX_Size() int {
	return xxx_messageInfo_AllLotsResponse.Size(m)
}
func (m *AllLotsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AllLotsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AllLotsResponse proto.InternalMessageInfo

func (m *AllLotsResponse) GetLots() []*Lot {
	if m != nil {
		return m.Lots
	}
	return nil
}

type BuyLotRequest struct {
	JsonReq              []byte   `protobuf:"bytes,1,opt,name=jsonReq,proto3" json:"jsonReq,omitempty"`
	LotID                int64    `protobuf:"varint,2,opt,name=LotID,proto3" json:"LotID,omitempty"`
	UserID               int64    `protobuf:"varint,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuyLotRequest) Reset()         { *m = BuyLotRequest{} }
func (m *BuyLotRequest) String() string { return proto.CompactTextString(m) }
func (*BuyLotRequest) ProtoMessage()    {}
func (*BuyLotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_76b8786f6486cebb, []int{6}
}

func (m *BuyLotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuyLotRequest.Unmarshal(m, b)
}
func (m *BuyLotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuyLotRequest.Marshal(b, m, deterministic)
}
func (m *BuyLotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuyLotRequest.Merge(m, src)
}
func (m *BuyLotRequest) XXX_Size() int {
	return xxx_messageInfo_BuyLotRequest.Size(m)
}
func (m *BuyLotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BuyLotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BuyLotRequest proto.InternalMessageInfo

func (m *BuyLotRequest) GetJsonReq() []byte {
	if m != nil {
		return m.JsonReq
	}
	return nil
}

func (m *BuyLotRequest) GetLotID() int64 {
	if m != nil {
		return m.LotID
	}
	return 0
}

func (m *BuyLotRequest) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

type BuyingLotResponse struct {
	Lot                  *Lot     `protobuf:"bytes,1,opt,name=lot,proto3" json:"lot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuyingLotResponse) Reset()         { *m = BuyingLotResponse{} }
func (m *BuyingLotResponse) String() string { return proto.CompactTextString(m) }
func (*BuyingLotResponse) ProtoMessage()    {}
func (*BuyingLotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_76b8786f6486cebb, []int{7}
}

func (m *BuyingLotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuyingLotResponse.Unmarshal(m, b)
}
func (m *BuyingLotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuyingLotResponse.Marshal(b, m, deterministic)
}
func (m *BuyingLotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuyingLotResponse.Merge(m, src)
}
func (m *BuyingLotResponse) XXX_Size() int {
	return xxx_messageInfo_BuyingLotResponse.Size(m)
}
func (m *BuyingLotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BuyingLotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BuyingLotResponse proto.InternalMessageInfo

func (m *BuyingLotResponse) GetLot() *Lot {
	if m != nil {
		return m.Lot
	}
	return nil
}

type UpdateLotRequest struct {
	JsonReq              []byte   `protobuf:"bytes,1,opt,name=jsonReq,proto3" json:"jsonReq,omitempty"`
	UserID               int64    `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	LotID                int64    `protobuf:"varint,3,opt,name=LotID,proto3" json:"LotID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateLotRequest) Reset()         { *m = UpdateLotRequest{} }
func (m *UpdateLotRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateLotRequest) ProtoMessage()    {}
func (*UpdateLotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_76b8786f6486cebb, []int{8}
}

func (m *UpdateLotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateLotRequest.Unmarshal(m, b)
}
func (m *UpdateLotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateLotRequest.Marshal(b, m, deterministic)
}
func (m *UpdateLotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateLotRequest.Merge(m, src)
}
func (m *UpdateLotRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateLotRequest.Size(m)
}
func (m *UpdateLotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateLotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateLotRequest proto.InternalMessageInfo

func (m *UpdateLotRequest) GetJsonReq() []byte {
	if m != nil {
		return m.JsonReq
	}
	return nil
}

func (m *UpdateLotRequest) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *UpdateLotRequest) GetLotID() int64 {
	if m != nil {
		return m.LotID
	}
	return 0
}

type UpdatedLotResponse struct {
	Lot                  *Lot     `protobuf:"bytes,1,opt,name=lot,proto3" json:"lot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatedLotResponse) Reset()         { *m = UpdatedLotResponse{} }
func (m *UpdatedLotResponse) String() string { return proto.CompactTextString(m) }
func (*UpdatedLotResponse) ProtoMessage()    {}
func (*UpdatedLotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_76b8786f6486cebb, []int{9}
}

func (m *UpdatedLotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatedLotResponse.Unmarshal(m, b)
}
func (m *UpdatedLotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatedLotResponse.Marshal(b, m, deterministic)
}
func (m *UpdatedLotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatedLotResponse.Merge(m, src)
}
func (m *UpdatedLotResponse) XXX_Size() int {
	return xxx_messageInfo_UpdatedLotResponse.Size(m)
}
func (m *UpdatedLotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatedLotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatedLotResponse proto.InternalMessageInfo

func (m *UpdatedLotResponse) GetLot() *Lot {
	if m != nil {
		return m.Lot
	}
	return nil
}

type DeleteLotRequest struct {
	UserID               int64    `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	LotID                int64    `protobuf:"varint,2,opt,name=LotID,proto3" json:"LotID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteLotRequest) Reset()         { *m = DeleteLotRequest{} }
func (m *DeleteLotRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteLotRequest) ProtoMessage()    {}
func (*DeleteLotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_76b8786f6486cebb, []int{10}
}

func (m *DeleteLotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteLotRequest.Unmarshal(m, b)
}
func (m *DeleteLotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteLotRequest.Marshal(b, m, deterministic)
}
func (m *DeleteLotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteLotRequest.Merge(m, src)
}
func (m *DeleteLotRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteLotRequest.Size(m)
}
func (m *DeleteLotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteLotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteLotRequest proto.InternalMessageInfo

func (m *DeleteLotRequest) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *DeleteLotRequest) GetLotID() int64 {
	if m != nil {
		return m.LotID
	}
	return 0
}

type Nothing struct {
	Dummy                bool     `protobuf:"varint,1,opt,name=dummy,proto3" json:"dummy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Nothing) Reset()         { *m = Nothing{} }
func (m *Nothing) String() string { return proto.CompactTextString(m) }
func (*Nothing) ProtoMessage()    {}
func (*Nothing) Descriptor() ([]byte, []int) {
	return fileDescriptor_76b8786f6486cebb, []int{11}
}

func (m *Nothing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Nothing.Unmarshal(m, b)
}
func (m *Nothing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Nothing.Marshal(b, m, deterministic)
}
func (m *Nothing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Nothing.Merge(m, src)
}
func (m *Nothing) XXX_Size() int {
	return xxx_messageInfo_Nothing.Size(m)
}
func (m *Nothing) XXX_DiscardUnknown() {
	xxx_messageInfo_Nothing.DiscardUnknown(m)
}

var xxx_messageInfo_Nothing proto.InternalMessageInfo

func (m *Nothing) GetDummy() bool {
	if m != nil {
		return m.Dummy
	}
	return false
}

type CreateLotRequest struct {
	JsonReq              []byte   `protobuf:"bytes,1,opt,name=jsonReq,proto3" json:"jsonReq,omitempty"`
	UserID               int64    `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateLotRequest) Reset()         { *m = CreateLotRequest{} }
func (m *CreateLotRequest) String() string { return proto.CompactTextString(m) }
func (*CreateLotRequest) ProtoMessage()    {}
func (*CreateLotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_76b8786f6486cebb, []int{12}
}

func (m *CreateLotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLotRequest.Unmarshal(m, b)
}
func (m *CreateLotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLotRequest.Marshal(b, m, deterministic)
}
func (m *CreateLotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLotRequest.Merge(m, src)
}
func (m *CreateLotRequest) XXX_Size() int {
	return xxx_messageInfo_CreateLotRequest.Size(m)
}
func (m *CreateLotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLotRequest proto.InternalMessageInfo

func (m *CreateLotRequest) GetJsonReq() []byte {
	if m != nil {
		return m.JsonReq
	}
	return nil
}

func (m *CreateLotRequest) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

type CreatedLotResponse struct {
	Lot                  *Lot     `protobuf:"bytes,1,opt,name=lot,proto3" json:"lot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatedLotResponse) Reset()         { *m = CreatedLotResponse{} }
func (m *CreatedLotResponse) String() string { return proto.CompactTextString(m) }
func (*CreatedLotResponse) ProtoMessage()    {}
func (*CreatedLotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_76b8786f6486cebb, []int{13}
}

func (m *CreatedLotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatedLotResponse.Unmarshal(m, b)
}
func (m *CreatedLotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatedLotResponse.Marshal(b, m, deterministic)
}
func (m *CreatedLotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatedLotResponse.Merge(m, src)
}
func (m *CreatedLotResponse) XXX_Size() int {
	return xxx_messageInfo_CreatedLotResponse.Size(m)
}
func (m *CreatedLotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatedLotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreatedLotResponse proto.InternalMessageInfo

func (m *CreatedLotResponse) GetLot() *Lot {
	if m != nil {
		return m.Lot
	}
	return nil
}

type AllUserLotsRequest struct {
	UserID               int64    `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AllUserLotsRequest) Reset()         { *m = AllUserLotsRequest{} }
func (m *AllUserLotsRequest) String() string { return proto.CompactTextString(m) }
func (*AllUserLotsRequest) ProtoMessage()    {}
func (*AllUserLotsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_76b8786f6486cebb, []int{14}
}

func (m *AllUserLotsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllUserLotsRequest.Unmarshal(m, b)
}
func (m *AllUserLotsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllUserLotsRequest.Marshal(b, m, deterministic)
}
func (m *AllUserLotsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllUserLotsRequest.Merge(m, src)
}
func (m *AllUserLotsRequest) XXX_Size() int {
	return xxx_messageInfo_AllUserLotsRequest.Size(m)
}
func (m *AllUserLotsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AllUserLotsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AllUserLotsRequest proto.InternalMessageInfo

func (m *AllUserLotsRequest) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *AllUserLotsRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type AllUserLotsResponse struct {
	Lots                 []*Lot   `protobuf:"bytes,1,rep,name=lots,proto3" json:"lots,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AllUserLotsResponse) Reset()         { *m = AllUserLotsResponse{} }
func (m *AllUserLotsResponse) String() string { return proto.CompactTextString(m) }
func (*AllUserLotsResponse) ProtoMessage()    {}
func (*AllUserLotsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_76b8786f6486cebb, []int{15}
}

func (m *AllUserLotsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllUserLotsResponse.Unmarshal(m, b)
}
func (m *AllUserLotsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllUserLotsResponse.Marshal(b, m, deterministic)
}
func (m *AllUserLotsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllUserLotsResponse.Merge(m, src)
}
func (m *AllUserLotsResponse) XXX_Size() int {
	return xxx_messageInfo_AllUserLotsResponse.Size(m)
}
func (m *AllUserLotsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AllUserLotsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AllUserLotsResponse proto.InternalMessageInfo

func (m *AllUserLotsResponse) GetLots() []*Lot {
	if m != nil {
		return m.Lots
	}
	return nil
}

func init() {
	proto.RegisterType((*SingleLotRequestId)(nil), "SingleLotRequestId")
	proto.RegisterType((*Lot)(nil), "Lot")
	proto.RegisterType((*SingleLotResponse)(nil), "SingleLotResponse")
	proto.RegisterType((*ShortUser)(nil), "ShortUser")
	proto.RegisterType((*AllLotsRequestStatus)(nil), "AllLotsRequestStatus")
	proto.RegisterType((*AllLotsResponse)(nil), "AllLotsResponse")
	proto.RegisterType((*BuyLotRequest)(nil), "BuyLotRequest")
	proto.RegisterType((*BuyingLotResponse)(nil), "BuyingLotResponse")
	proto.RegisterType((*UpdateLotRequest)(nil), "UpdateLotRequest")
	proto.RegisterType((*UpdatedLotResponse)(nil), "UpdatedLotResponse")
	proto.RegisterType((*DeleteLotRequest)(nil), "DeleteLotRequest")
	proto.RegisterType((*Nothing)(nil), "nothing")
	proto.RegisterType((*CreateLotRequest)(nil), "CreateLotRequest")
	proto.RegisterType((*CreatedLotResponse)(nil), "CreatedLotResponse")
	proto.RegisterType((*AllUserLotsRequest)(nil), "AllUserLotsRequest")
	proto.RegisterType((*AllUserLotsResponse)(nil), "AllUserLotsResponse")
}

func init() { proto.RegisterFile("LotsService.proto", fileDescriptor_76b8786f6486cebb) }

var fileDescriptor_76b8786f6486cebb = []byte{
	// 662 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0x5d, 0x6b, 0xdb, 0x30,
	0x14, 0x8d, 0xe3, 0x7c, 0xde, 0x74, 0x5d, 0x72, 0xd3, 0x15, 0x63, 0x0a, 0x0b, 0xa2, 0x0f, 0x61,
	0x1d, 0x1a, 0x74, 0x8c, 0xb1, 0x87, 0xc1, 0x92, 0x79, 0x2b, 0x81, 0x6c, 0x0c, 0xa7, 0x65, 0xd0,
	0xb7, 0xb4, 0x16, 0xad, 0x87, 0x6b, 0xb9, 0xb6, 0x3c, 0xc8, 0x5f, 0xd8, 0xdf, 0xdb, 0x1f, 0x1a,
	0x92, 0xfc, 0xd5, 0xb8, 0x63, 0x81, 0xbd, 0xf9, 0xdc, 0x23, 0x4b, 0xe7, 0xde, 0x73, 0x64, 0xc3,
	0x68, 0xc9, 0x45, 0xb2, 0x62, 0xf1, 0x4f, 0xff, 0x9a, 0xd1, 0x28, 0xe6, 0x82, 0x93, 0x63, 0xc0,
	0x95, 0x1f, 0xde, 0x04, 0x6c, 0xc9, 0x85, 0xcb, 0xee, 0x53, 0x96, 0x88, 0x85, 0x87, 0xfb, 0xd0,
	0xf4, 0x3d, 0xcb, 0x98, 0x18, 0x53, 0xd3, 0x6d, 0xfa, 0x1e, 0xf9, 0xdd, 0x04, 0x73, 0xc9, 0x85,
	0xac, 0x2f, 0x9c, 0xbc, 0xbe, 0x70, 0xf0, 0x00, 0xda, 0xe7, 0xbe, 0x08, 0x98, 0xd5, 0x9c, 0x18,
	0xd3, 0xbe, 0xab, 0x01, 0x4e, 0x60, 0xe0, 0xb0, 0xe4, 0x3a, 0xf6, 0x23, 0xe1, 0xf3, 0xd0, 0x32,
	0x15, 0x57, 0x2d, 0xa1, 0x0d, 0xbd, 0x79, 0xba, 0xf9, 0x16, 0xfb, 0xd7, 0xcc, 0x6a, 0x4d, 0x8c,
	0xa9, 0xe1, 0x16, 0x58, 0x72, 0x5f, 0xfc, 0x50, 0x73, 0x6d, 0xcd, 0xe5, 0x18, 0x8f, 0xa0, 0xaf,
	0x1e, 0x56, 0x82, 0x45, 0x56, 0x47, 0x91, 0x65, 0x01, 0x0f, 0xa1, 0xb3, 0x12, 0x6b, 0x91, 0x26,
	0x56, 0x57, 0x1d, 0x99, 0x21, 0xa9, 0xf2, 0x53, 0xe8, 0xcd, 0x84, 0xd5, 0xd3, 0x2a, 0x15, 0x90,
	0x7b, 0x7d, 0x8c, 0xd9, 0x5a, 0x30, 0xc9, 0xf4, 0x15, 0x53, 0x16, 0xa4, 0x8a, 0x8b, 0xc8, 0x5b,
	0x0b, 0x36, 0x13, 0x16, 0x28, 0xb2, 0xc0, 0x78, 0x0c, 0x5d, 0xb5, 0x90, 0xc7, 0xd6, 0x60, 0x62,
	0x4c, 0x07, 0xa7, 0x40, 0x57, 0xb7, 0x3c, 0x16, 0x17, 0x09, 0x8b, 0xdd, 0x9c, 0xc2, 0x09, 0xb4,
	0xe7, 0xe9, 0x86, 0xc5, 0xd6, 0x5e, 0x6d, 0x8d, 0x26, 0xc8, 0x09, 0x8c, 0x2a, 0xb3, 0x4f, 0x22,
	0x1e, 0x26, 0x0c, 0x0f, 0xc1, 0x0c, 0xb8, 0x50, 0x33, 0x1e, 0x9c, 0xb6, 0xa8, 0xa4, 0x64, 0x81,
	0x5c, 0x40, 0xbf, 0xd8, 0xa0, 0xe6, 0xc3, 0x11, 0xf4, 0x3f, 0xfb, 0x71, 0x22, 0xbe, 0xae, 0xef,
	0x72, 0x2f, 0xca, 0x82, 0xec, 0x65, 0xb9, 0xce, 0x48, 0x6d, 0x46, 0x81, 0x09, 0x85, 0x83, 0x59,
	0x10, 0xc8, 0x5c, 0x64, 0xee, 0x67, 0x33, 0x2b, 0x67, 0x69, 0x54, 0x67, 0x49, 0x4e, 0xe0, 0x69,
	0xb1, 0x3e, 0x53, 0x6c, 0x41, 0x2b, 0xe0, 0x42, 0x2e, 0x34, 0x0b, 0xc9, 0xaa, 0x42, 0xbe, 0xc3,
	0x93, 0x79, 0xba, 0x29, 0x93, 0x85, 0x16, 0x74, 0x7f, 0x24, 0x3c, 0x74, 0xd9, 0xbd, 0xda, 0x76,
	0xcf, 0xcd, 0xa1, 0xf4, 0x68, 0xc9, 0xc5, 0xc2, 0x51, 0xea, 0x4d, 0x57, 0x03, 0xa9, 0x42, 0xf6,
	0xbb, 0x70, 0x94, 0x6e, 0xd3, 0xcd, 0x90, 0x9c, 0xdc, 0x3c, 0xdd, 0xf8, 0xe1, 0xcd, 0x2e, 0x93,
	0xbb, 0x84, 0xa1, 0xb6, 0x6e, 0x27, 0x21, 0xe5, 0x91, 0xcd, 0xea, 0x91, 0xa5, 0x40, 0xb3, 0x22,
	0x90, 0xbc, 0x04, 0xd4, 0x7b, 0x7b, 0xbb, 0x28, 0xf9, 0x00, 0x43, 0x87, 0x05, 0xec, 0x81, 0x92,
	0xf2, 0x3c, 0xe3, 0xf1, 0xf3, 0xaa, 0x03, 0x21, 0xcf, 0xa1, 0x1b, 0x72, 0x71, 0xeb, 0x87, 0x37,
	0x72, 0x81, 0x97, 0xde, 0xdd, 0x6d, 0xd4, 0x7b, 0x3d, 0x57, 0x03, 0xe2, 0xc0, 0x50, 0x87, 0xf8,
	0x7f, 0x9a, 0x95, 0x6d, 0x65, 0x57, 0x61, 0xb7, 0xb6, 0x70, 0x16, 0x04, 0xf2, 0xd5, 0x4a, 0x8e,
	0xfe, 0xda, 0x18, 0x42, 0xeb, 0x7c, 0x13, 0xe5, 0x31, 0x55, 0xcf, 0xe4, 0x15, 0x8c, 0x1f, 0xec,
	0xf0, 0xaf, 0x64, 0x9d, 0xfe, 0x32, 0x61, 0x50, 0xf9, 0x98, 0xe1, 0x3b, 0xd8, 0x3b, 0x63, 0xa2,
	0xb8, 0x4d, 0x38, 0xa6, 0xf5, 0xaf, 0x9a, 0x8d, 0xb4, 0x76, 0xdd, 0x48, 0x03, 0xdf, 0x02, 0x9c,
	0x31, 0x91, 0x85, 0x1a, 0x9f, 0xd1, 0xc7, 0xae, 0x83, 0x3d, 0xa4, 0x5b, 0xa9, 0x27, 0x0d, 0xa4,
	0xd0, 0xd1, 0xe9, 0xc6, 0x7d, 0xfa, 0x20, 0xe6, 0x36, 0xd2, 0x5a, 0x3a, 0x49, 0x03, 0xdf, 0x40,
	0xbf, 0xc8, 0x21, 0x8e, 0xe8, 0x76, 0x26, 0xed, 0x31, 0xad, 0x47, 0x89, 0x34, 0xf0, 0x05, 0xf4,
	0x8b, 0xd0, 0xe0, 0x88, 0x6e, 0x07, 0xc8, 0xee, 0xd1, 0x2c, 0x11, 0xfa, 0x88, 0xc2, 0x7d, 0x1c,
	0xd1, 0xed, 0x24, 0xd8, 0x63, 0x5a, 0xb7, 0x95, 0x34, 0xf0, 0x3d, 0xec, 0xeb, 0x11, 0xe4, 0x0e,
	0xe0, 0x98, 0xd6, 0x1d, 0xb5, 0x0f, 0xe8, 0x23, 0x26, 0x91, 0xc6, 0xbc, 0x7b, 0xd9, 0x0e, 0xb8,
	0x88, 0xae, 0xae, 0x3a, 0xea, 0x9f, 0xf2, 0xfa, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x11, 0xae,
	0x17, 0x77, 0x68, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LotsServiceClient is the client API for LotsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LotsServiceClient interface {
	// Unary
	GetSingleLot(ctx context.Context, in *SingleLotRequestId, opts ...grpc.CallOption) (*SingleLotResponse, error)
	GetAllLots(ctx context.Context, in *AllLotsRequestStatus, opts ...grpc.CallOption) (*AllLotsResponse, error)
	BuyLot(ctx context.Context, in *BuyLotRequest, opts ...grpc.CallOption) (*BuyingLotResponse, error)
	UpdateLot(ctx context.Context, in *UpdateLotRequest, opts ...grpc.CallOption) (*UpdatedLotResponse, error)
	DeleteLot(ctx context.Context, in *DeleteLotRequest, opts ...grpc.CallOption) (*Nothing, error)
	CreateLot(ctx context.Context, in *CreateLotRequest, opts ...grpc.CallOption) (*CreatedLotResponse, error)
	GetAllUserLots(ctx context.Context, in *AllUserLotsRequest, opts ...grpc.CallOption) (*AllUserLotsResponse, error)
}

type lotsServiceClient struct {
	cc *grpc.ClientConn
}

func NewLotsServiceClient(cc *grpc.ClientConn) LotsServiceClient {
	return &lotsServiceClient{cc}
}

func (c *lotsServiceClient) GetSingleLot(ctx context.Context, in *SingleLotRequestId, opts ...grpc.CallOption) (*SingleLotResponse, error) {
	out := new(SingleLotResponse)
	err := c.cc.Invoke(ctx, "/LotsService/GetSingleLot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lotsServiceClient) GetAllLots(ctx context.Context, in *AllLotsRequestStatus, opts ...grpc.CallOption) (*AllLotsResponse, error) {
	out := new(AllLotsResponse)
	err := c.cc.Invoke(ctx, "/LotsService/GetAllLots", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lotsServiceClient) BuyLot(ctx context.Context, in *BuyLotRequest, opts ...grpc.CallOption) (*BuyingLotResponse, error) {
	out := new(BuyingLotResponse)
	err := c.cc.Invoke(ctx, "/LotsService/BuyLot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lotsServiceClient) UpdateLot(ctx context.Context, in *UpdateLotRequest, opts ...grpc.CallOption) (*UpdatedLotResponse, error) {
	out := new(UpdatedLotResponse)
	err := c.cc.Invoke(ctx, "/LotsService/UpdateLot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lotsServiceClient) DeleteLot(ctx context.Context, in *DeleteLotRequest, opts ...grpc.CallOption) (*Nothing, error) {
	out := new(Nothing)
	err := c.cc.Invoke(ctx, "/LotsService/DeleteLot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lotsServiceClient) CreateLot(ctx context.Context, in *CreateLotRequest, opts ...grpc.CallOption) (*CreatedLotResponse, error) {
	out := new(CreatedLotResponse)
	err := c.cc.Invoke(ctx, "/LotsService/CreateLot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lotsServiceClient) GetAllUserLots(ctx context.Context, in *AllUserLotsRequest, opts ...grpc.CallOption) (*AllUserLotsResponse, error) {
	out := new(AllUserLotsResponse)
	err := c.cc.Invoke(ctx, "/LotsService/GetAllUserLots", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LotsServiceServer is the server API for LotsService service.
type LotsServiceServer interface {
	// Unary
	GetSingleLot(context.Context, *SingleLotRequestId) (*SingleLotResponse, error)
	GetAllLots(context.Context, *AllLotsRequestStatus) (*AllLotsResponse, error)
	BuyLot(context.Context, *BuyLotRequest) (*BuyingLotResponse, error)
	UpdateLot(context.Context, *UpdateLotRequest) (*UpdatedLotResponse, error)
	DeleteLot(context.Context, *DeleteLotRequest) (*Nothing, error)
	CreateLot(context.Context, *CreateLotRequest) (*CreatedLotResponse, error)
	GetAllUserLots(context.Context, *AllUserLotsRequest) (*AllUserLotsResponse, error)
}

// UnimplementedLotsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLotsServiceServer struct {
}

func (*UnimplementedLotsServiceServer) GetSingleLot(ctx context.Context, req *SingleLotRequestId) (*SingleLotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSingleLot not implemented")
}
func (*UnimplementedLotsServiceServer) GetAllLots(ctx context.Context, req *AllLotsRequestStatus) (*AllLotsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllLots not implemented")
}
func (*UnimplementedLotsServiceServer) BuyLot(ctx context.Context, req *BuyLotRequest) (*BuyingLotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuyLot not implemented")
}
func (*UnimplementedLotsServiceServer) UpdateLot(ctx context.Context, req *UpdateLotRequest) (*UpdatedLotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateLot not implemented")
}
func (*UnimplementedLotsServiceServer) DeleteLot(ctx context.Context, req *DeleteLotRequest) (*Nothing, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteLot not implemented")
}
func (*UnimplementedLotsServiceServer) CreateLot(ctx context.Context, req *CreateLotRequest) (*CreatedLotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateLot not implemented")
}
func (*UnimplementedLotsServiceServer) GetAllUserLots(ctx context.Context, req *AllUserLotsRequest) (*AllUserLotsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllUserLots not implemented")
}

func RegisterLotsServiceServer(s *grpc.Server, srv LotsServiceServer) {
	s.RegisterService(&_LotsService_serviceDesc, srv)
}

func _LotsService_GetSingleLot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SingleLotRequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LotsServiceServer).GetSingleLot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LotsService/GetSingleLot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LotsServiceServer).GetSingleLot(ctx, req.(*SingleLotRequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _LotsService_GetAllLots_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AllLotsRequestStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LotsServiceServer).GetAllLots(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LotsService/GetAllLots",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LotsServiceServer).GetAllLots(ctx, req.(*AllLotsRequestStatus))
	}
	return interceptor(ctx, in, info, handler)
}

func _LotsService_BuyLot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuyLotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LotsServiceServer).BuyLot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LotsService/BuyLot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LotsServiceServer).BuyLot(ctx, req.(*BuyLotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LotsService_UpdateLot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateLotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LotsServiceServer).UpdateLot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LotsService/UpdateLot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LotsServiceServer).UpdateLot(ctx, req.(*UpdateLotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LotsService_DeleteLot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteLotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LotsServiceServer).DeleteLot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LotsService/DeleteLot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LotsServiceServer).DeleteLot(ctx, req.(*DeleteLotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LotsService_CreateLot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateLotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LotsServiceServer).CreateLot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LotsService/CreateLot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LotsServiceServer).CreateLot(ctx, req.(*CreateLotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LotsService_GetAllUserLots_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AllUserLotsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LotsServiceServer).GetAllUserLots(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LotsService/GetAllUserLots",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LotsServiceServer).GetAllUserLots(ctx, req.(*AllUserLotsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LotsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "LotsService",
	HandlerType: (*LotsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSingleLot",
			Handler:    _LotsService_GetSingleLot_Handler,
		},
		{
			MethodName: "GetAllLots",
			Handler:    _LotsService_GetAllLots_Handler,
		},
		{
			MethodName: "BuyLot",
			Handler:    _LotsService_BuyLot_Handler,
		},
		{
			MethodName: "UpdateLot",
			Handler:    _LotsService_UpdateLot_Handler,
		},
		{
			MethodName: "DeleteLot",
			Handler:    _LotsService_DeleteLot_Handler,
		},
		{
			MethodName: "CreateLot",
			Handler:    _LotsService_CreateLot_Handler,
		},
		{
			MethodName: "GetAllUserLots",
			Handler:    _LotsService_GetAllUserLots_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "LotsService.proto",
}
